services:
  frontend:
    build:
      context: .
      dockerfile: docker/frontend.prod.Dockerfile
      args:
        NEXT_PUBLIC_SITE_URL: http://localhost:3000
        NEXT_PUBLIC_HTTP_URL: http://localhost:9000
        NEXT_PUBLIC_SIGNAL_URL: ws://localhost:8000
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
      signal:
        condition: service_healthy
    environment:
      NEXT_PUBLIC_SITE_URL: http://localhost:3000
      NEXT_PUBLIC_HTTP_URL: http://localhost:9000
      NEXT_PUBLIC_SIGNAL_URL: ws://localhost:8000
      NODE_ENV: production
      NEXTAUTH_URL: http://localhost:3000
      NEXTAUTH_SECRET: changeme
      GOOGLE_CLIENT_ID: ""
      GOOGLE_CLIENT_SECRET: ""

  backend:
    build:
      context: .
      dockerfile: docker/backend.prod.Dockerfile
      args:
        DATABASE_URL: postgresql://audora_user:supersecret123@database:5432/audora
    ports:
      - "9000:9000"
    depends_on:
      database:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://audora_user:supersecret123@database:5432/audora
      JWT_SECRET: changeme
      FRONTEND_URL: http://localhost:3000
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:9000/health || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 3

  signal:
    build:
      context: .
      dockerfile: docker/signal.prod.Dockerfile
      args:
        DATABASE_URL: postgresql://audora_user:supersecret123@database:5432/audora
    ports:
      - "8000:8000"
    depends_on:
      database:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://audora_user:supersecret123@database:5432/audora
      JWT_SECRET: changeme
    restart: unless-stopped

  database:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: audora_user
      POSTGRES_PASSWORD: supersecret123
      POSTGRES_DB: audora
    volumes:
      - audora_postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U audora_user -d audora"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  audora_postgres_data: